}
result = data.frame(result)
result
}
mes()
libraby(XML)
library(XML)
library("XML")
library(XML)
fileURL = "http://www.w3schools.com/xml/simple.xml"
doc = xmlTreeParse(fileURL, useInternal = TRUE)
install.packages("XML")
library(XML)
fileURL = "http://www.w3schools.com/xml/simple.xml"
doc = xmlTreeParse(fileURL, useInternal = TRUE)
rootNode = xmlRoot(doc)
xmlName(rootNode)
doc
names(rootNode)
rootNode[[1]]
rootNode[[1][1]]
rootNode[[1]] [[1]]
xmlSapply(rootNode, xmlValue)
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "//price", xmlValue)
myjson = toJSON(iris, pretty = TRUE)
install.packages("JSON")
?download.file
fileURL = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dest = "C:\Raphael\estudos\datasciencecoursera\Clearing Data\Week1"
dest = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1"
acs = download.file(fileURL, dest, method = curl )
acs = download.file(fileURL, dest, method = "curl")
acs
acs = download.file(fileURL, dest)
fileURL = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dest = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1"
acs = download.file(fileURL, dest)
acs
names(acs)
acs = download.file(fileURL, destfile = dest)
fileURL = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dest = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\data.csv"
acs = download.file(fileURL, destfile = dest)
read.csv(dest)
data_acs = read.csv(dest)
names(data_acs)
data_acs$VAL
subset(data_acs, data_acs$VAL = 24)
subset(data_acs, VAL = 24)
View(data_acs)
View(data_acs)
sub_data = subset(data_acs, VAL = 24, select = c("SERIALNO", "VAL"))
View(sub_data)
sub_data = subset(data_acs, VAL = "24", select = c("SERIALNO", "VAL"))
sub_data = subset(data_acs, VAL = "24", select = c("SERIALNO", "VAL"))
View(sub_data)
class(data_acs$VAL)
sum(data_acs$VAL)
val = sum(rm.na(data_acs$VAL)
val = sum(rm.na(data_acs$VAL))
val = sum(rm.na(data_acs$VAL))
View(sub_data)
as.numeric(sub_data)
sub_data = subset(data_acs, VAL = "24", select = c("VAL"))
as.numeric(sub_data)
?data.table
install.packages("data.table")
library("data.table")
?data.table
data_acs = data.table(dest)
View(data_acs)
data_acs = read.csv(dest)
data_acs = data.table(data_acs)
data_acs = read.csv(dest)
dt_acs = data.table(data_acs)
class(dt_acs$VAL)
sub_data = subset(data_acs, VAL == 24, select = c("VAL"))
View(sub_data)
class(data_acs$FES)
unique(data_acs$FES)
library("XLSX")
install.packages("XLSX")
install.packages("xlsx")
dest_excel = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\nat_gas.xlsx"
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",
destfile = dest_excel)
data_excel = read.xlsx(dest_excel)
library("xlsx")
data_excel = read.xlsx(dest_excel)
install.packages("xlsx")
library("xlsx")
dest_excel = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\nat_gas.xlsx"
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",
destfile = dest_excel)
data_excel = read.xlsx(dest_excel)
data_excel = read.xlsx2(dest_excel)
library("xlsx")
install.packages("JSON")
library(XML)
library("XML")
install.packages("XML")
download.file(xml_file, destfile = dest_xml)
xml_file = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
dest_xml = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\bal_rest.xml"
download.file(xml_file, destfile = dest_xml)
library("xlsx")
library("rJava")
data_xml = xmlTreeParse(dest_xml, useInternal = TRUE)
library(XML)
data_xml = xmlTreeParse(dest_xml, useInternal = TRUE)
data_xml
root_data_xml = xmlRoot(data_xml)
root_data_xml
xmlName(root_data_xml)
names(root_data_xml)
root_data_xml[[1]]
root_data_xml[[1]] [[1]]
xmlSApply(root_xml_data, xmlValue)
xmlSApply(root_data_xml, xmlValue)
xlm_table = xmlSApply(root_data_xml, xmlValue)
xlm_table = xmlSApply(root_data_xml, "//name" xmlValue)
xlm_table = xmlSApply(root_data_xml, "//name", xmlValue)
names(root_data_xml)
root_data_xml[[1]] [[1]]
root_data_xml[[1]] [[1]] [[1]]
xlm_table = xmlSApply(root_data_xml, "//name", xmlValue)
xlm_table = xmlSApply(root_data_xml, "//zipcode", xmlValue)
xlm_table = xpathSApply(root_data_xml, "//zipcode", xmlValue)
xlm_table = xpathSApply(root_data_xml, "//name", xmlValue)
xml_table
xml_table = xpathSApply(root_data_xml, "//name", xmlValue)
xml_table
xml_table = xpathSApply(root_data_xml, "//name", "//zipcode == 21231", xmlValue)
xml_table = xpathSApply(root_data_xml, "//name", "//zipcode == "21231"", xmlValue)
xml_table = xpathSApply(root_data_xml, "//zipcode == "21231"", xmlValue)
xml_table = xpathSApply(root_data_xml, "//zipcode" , xmlValue)
xml_table
df = data.frame(xml_table)
df
View(df)
sub_df = subset(sub_df, xml_table == "21231")
sub_df = subset(df, xml_table == "21231")
View(sub_df)
dest_csv = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\idaho_s.csv"
DT <- fread(dest_csv)
library(data.table)
DT <- fread(dest_csv)
x1 = system.time(DT[,mean(pwgtp15),by=SEX])
x2 = system.time(mean(DT$pwgtp15,by=DT$SEX))
x1 = as.vector(x1)
x2 = as.vector(x2)
x2
x1
x2 - x1
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
library("xlsx")
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.csv",
destfile = dest_excel)
dest_excel = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\nat_gas.xlsx"
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.csv",
destfile = dest_excel)
dest_excel = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\nat_gas.csv"
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",
destfile = dest_excel)
data_excel = read.csv(dest_excel)
dest_excel = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\nat_gas.xlsx"
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",
destfile = dest_excel)
dest_excel = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\nat_gas.xlsx"
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",
destfile = dest_excel)
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",
destfile = dest_excel)
data_excel = read.csv(dest_excel)
dest_excel = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\nat_gas.xlsx"
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",
destfile = dest_excel)
dest_excel = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\nat_gas.xlsx"
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",
destfile = dest_excel)
dest_excel = "C:\\Raphael\\estudos\\datasciencecoursera\\Clearing Data\\Week1\\nat_gas.xlsx"
excel_file = download.file(
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",
destfile = dest_excel)
library("xlsxjars")
library("rJava")
library("rJava")
options(java.home="C:\\Program Files\\Java\\jre8\\")
library(rJava)
library("rJava")
library("rJava")
library("rJava")
library(httr)
oauth_endpoints("github")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "8d34a7dbd08eacba7888fa449aa633d40773a77e")
myapp <- oauth_app("github", "998b39ff10bb5dc895eb")
myapp <- oauth_app("998b39ff10bb5dc895eb", "8d34a7dbd08eacba7888fa449aa633d40773a77e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("733d0d5d01853f6df8e7","d1b6426ed58cd2943bb425991aa1c3c98f2f49c8")
?oauth_app
?oauth
install.packages("OAuth")
?grepl
?R.bat
bat
?bat
?R CMD BATCH --help
?batch
library(swirl)
library("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<- read.csv(path2csv, stringFactors = FALSE)
mydf<- read.csv(path2csv, stringASFactors = FALSE)
mydf<- read.csv("path2csv", stringsAsFactors = FALSE)
mydf<- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, r_arch:country:r_arch)
select(cran, country:r_arch)
tbl_df
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
select(cran, package == "swirl")
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country IN "India")
filter(cran, r_version <= "3.0.2", country IN ("India"))
filter(cran, r_version <= "3.0.2", country == "India")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux_gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 = select(cran, size:ip_id)
cran2 = select(cran, size:ip_id)
cran2<- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<- select(cran2, ip_id, package, size)
cran3<- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3,correct_size = size / 1000)
mutate(cran3,correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran<- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<- group_by(cran, package)
by_package
bye()
swirl()
library(swirl)
swirl()
mean(size)
by_package
bye()
swirl()
by_package
summarize(by_package, mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts<- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted<- arrange(top_counts, count)
top_counts_sorted<- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted<- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -gra)de
gather(students, sex, count, -grade)
students2
res<- gather(students2, sex_class, count)
res<- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, c("sex", "class"), sex_class)
separate(res,  sex_class, c("sex", "class"))
submit()
students3
submit()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
submit()
passed
View(fail)
failed
passed <- passed %>%mutate(status = "passed")
failed <- failed %>%mutate(status = "failed")
rbind_list(passed, failed) %>%arrange(desc(status), name, class)
bind_rows(passed, failed)
sat
submit()
submit()
submit()
setwd("C:\\Raphael\\estudos\\datasciencecoursera\\Reproducible Research\\Week2\\RepData_PeerAssessment1")
unzip("activity.zip")
activity_data = read.csv("activity.csv")
mean_steps = aggregate(steps ~ date, data = activity_data, FUN = "sum")
par(mfcol=c(1,1))
hist(mean_steps$steps, main="Steps per day", xlab="Steps per day", col = "blue")
mean(mean_steps$steps, na.rm=TRUE)
median(mean_steps$steps, na.rm = TRUE)
av_steps = aggregate(steps ~ interval, data = activity_data, FUN = "mean")
plot(av_steps$interval, av_steps$steps, type = "l", col = "blue")
interval = av_steps$interval[which.max(av_steps$steps)]
sum(is.na(activity_data))
miss <- sum(is.na(activity_data$steps))
steps_int <- aggregate(steps ~ interval, data = activity_data, FUN = mean)
activity_data <- merge(activity_data, steps_int, by = "interval", suffixes = c("",
".y"))
nas <- is.na(activity_data$steps)
activity_data$steps[nas] <- activity_data$steps.y[nas]
activity_data <- activity_data[, c(1:3)]
steps_date <- aggregate(steps ~ date, data = activity_data, FUN = sum)
hist(steps_date$steps, xlab = "date", ylab = "steps", col = "orange")
mean(steps_date$steps)
median(steps_date$steps)
activity_data$date <- as.Date(activity_data$date)
daytype <- function(date) {
if (weekdays(date) %in% c("sábado", "domingo")) {
"weekend"
} else {
"weekday"
}
}
activity_data$daytype <- as.factor(sapply(activity_data$date, daytype))
library(lattice)
library(ggplot2)
mean_activity_missing = aggregate(steps ~ interval + daytype, data=activity_data, FUN="mean")
qplot(interval, steps, data = mean_activity_missing, geom = c("line", "smooth"), method = "lm", facets = weekday~. )
xyplot(
type="l",
data=mean_activity_missing,
steps ~ interval | daytype,
xlab="Interval",
ylab="Steps",
col = "blue",
geom = c("line", "smooth"),
method = "lm"
layout=c(1,2)
)
xyplot(
type="l",
data=mean_activity_missing,
steps ~ interval | daytype,
xlab="Interval",
ylab="Steps",
col = "blue",
geom = c("line", "smooth"),
method = "lm",
layout=c(1,2)
)
xyplot(
type="l",
data=mean_activity_missing,
steps ~ interval | daytype,
xlab="Interval",
ylab="Steps",
col = "blue",
geom = c("line", "smooth"),
method = "lm",
facets = weekday~.,
layout=c(1,2)
)
qplot(interval, steps, data = mean_activity_missing, geom = c("line", "smooth"), method = "lm", facets = weekday~.interval )
qplot(interval, steps, data = mean_activity_missing, geom = c("line", "smooth"), method = "lm")
View(mean_activity_missing)
qplot(interval, steps, data = mean_activity_missing, geom = c("line", "smooth"), method = "lm", facets = weekday~.daytype )
qplot(interval, steps, data = mean_activity_missing, geom = c("line", "smooth"), method = "lm", facets = daytype )
qplot(interval, steps, data = mean_activity_missing, geom = c("line", "smooth"), method = "lm", facets = weekday~daytype )
qplot(interval, steps, data = mean_activity_missing, geom = c("line", "smooth"), method = "lm", facets = weekday)
xyplot(
type="l",
data=mean_activity_missing,
steps ~ interval | daytype,
xlab="Interval",
ylab="Steps",
col = "blue",
geom = c("line", "smooth"),
method = "lm",
facets = weekday~.daytype,
layout=c(1,2)
)
qplot(
type="l",
data=mean_activity_missing,
steps ~ interval | daytype,
xlab="Interval",
ylab="Steps",
col = "blue",
geom = c("line", "smooth"),
method = "lm",
facets = weekday~.daytype,
layout=c(1,2)
)
xyplot(
type="l",
data=mean_activity_missing,
steps ~ interval | daytype,
xlab="Interval",
ylab="Steps",
col = "blue",
layout=c(1,2)
)
qplot(interval, steps, data = mean_activity_missing, geom = c("line", "smooth"), method = "lm", facets =  daytype~.)
plot(av_steps$interval, av_steps$steps, type = "l", col = "blue", xlab = "steps")
plot(av_steps$interval, av_steps$steps, type = "l", col = "blue", ylab = "steps",
xlab = "interval")
xyplot(
type="l",
data=mean_activity_missing,
steps ~ interval | daytype,
xlab="Interval",
ylab="Steps",
col = "blue",
layout=c(1,2)
)
